//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:2.0.50727.1891
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.CompactFramework.Design.Data 2.0.50727.1891 版自动生成。
// 
namespace OrderDish.WebReference {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    using System.Data;
    
    
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ServiceSoap", Namespace="http://tempuri.org/")]
    public partial class Service : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        /// <remarks/>
        public Service() {
            this.Url = GlobalVariable.WebServicePath;
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/HelloWorld", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string HelloWorld() {
            object[] results = this.Invoke("HelloWorld", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginHelloWorld(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("HelloWorld", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public string EndHelloWorld(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DataAdapter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet DataAdapter(string sql, string srcTable) {
            object[] results = this.Invoke("DataAdapter", new object[] {
                        sql,
                        srcTable});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDataAdapter(string sql, string srcTable, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DataAdapter", new object[] {
                        sql,
                        srcTable}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndDataAdapter(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ExecuteNonQuery", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ExecuteNonQuery(string sql) {
            object[] results = this.Invoke("ExecuteNonQuery", new object[] {
                        sql});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginExecuteNonQuery(string sql, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ExecuteNonQuery", new object[] {
                        sql}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndExecuteNonQuery(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ExecuteScalar", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ExecuteScalar(string sql) {
            object[] results = this.Invoke("ExecuteScalar", new object[] {
                        sql});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginExecuteScalar(string sql, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ExecuteScalar", new object[] {
                        sql}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndExecuteScalar(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/VerifyOrder", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable VerifyOrder(System.Data.DataTable table) {
            object[] results = this.Invoke("VerifyOrder", new object[] {
                        table});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginVerifyOrder(System.Data.DataTable table, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("VerifyOrder", new object[] {
                        table}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataTable EndVerifyOrder(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PlaceOrder", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string PlaceOrder(System.Data.DataTable table, string waiterID, string diskName, string deviceID) {
            object[] results = this.Invoke("PlaceOrder", new object[] {
                        table,
                        waiterID,
                        diskName,
                        deviceID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginPlaceOrder(System.Data.DataTable table, string waiterID, string diskName, string deviceID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("PlaceOrder", new object[] {
                        table,
                        waiterID,
                        diskName,
                        deviceID}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndPlaceOrder(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddDevice", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AddDevice(string deviceID) {
            object[] results = this.Invoke("AddDevice", new object[] {
                        deviceID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAddDevice(string deviceID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AddDevice", new object[] {
                        deviceID}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndAddDevice(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/VerifyDevice", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool VerifyDevice(string deviceID) {
            object[] results = this.Invoke("VerifyDevice", new object[] {
                        deviceID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginVerifyDevice(string deviceID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("VerifyDevice", new object[] {
                        deviceID}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndVerifyDevice(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckOrderState", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CheckOrderState(string orderID) {
            object[] results = this.Invoke("CheckOrderState", new object[] {
                        orderID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCheckOrderState(string orderID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CheckOrderState", new object[] {
                        orderID}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndCheckOrderState(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
    }
}
